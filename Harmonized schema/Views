
-- Creating a view that aggregates data for quick insights
CREATE OR REPLACE VIEW v_customer_transactions_summary AS
SELECT 
    cardholderid,
    COUNT(*) AS number_of_transactions,
    AVG(transactionamount) AS average_transaction_amount,
    SUM(transactionamount) AS total_transaction_amount
FROM 
    trustbankdata.harmonized.transactions
GROUP BY 
    cardholderid;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_CUSTOMER_OVERVIEW AS
SELECT 
    c.CARDHOLDERID,
    c.GENDER,
    c.OCCUPATION,
    c.ACCOUNTTYPE,
    c.MARITAL_STATUS,
    c.AGE_GROUP,
    SUM(t.TRANSACTIONAMOUNT) AS Total_Spent,
    AVG(t.TRANSACTIONAMOUNT) AS Avg_Transaction_Amount,
    COUNT(t.TRANSACTIONID) AS Transaction_Count
FROM 
    TRUSTBANKDATA.HARMONIZED.CUSTOMER_DEMO c
JOIN 
    TRUSTBANKDATA.HARMONIZED.TRANSACTIONS t ON c.CARDHOLDERID = t.CARDHOLDERID
GROUP BY 
    c.CARDHOLDERID, c.GENDER, c.OCCUPATION, c.ACCOUNTTYPE, c.MARITAL_STATUS, c.AGE_GROUP;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_BRANCH_PERFORMANCE AS
SELECT 
    b.BRANCH_ID,
    bl.LOCATION,  -- Fetching location information from BRANCH_LOOKUP
    SUM(t.TRANSACTIONAMOUNT) AS Total_Revenue,
    SUM(bp.ATM_USAGE_COUNT) AS Total_ATM_Usage,
    COUNT(t.TRANSACTIONID) AS Transaction_Count
FROM 
    TRUSTBANKDATA.HARMONIZED.BRANCH b
JOIN 
    TRUSTBANKDATA.HARMONIZED.BRANCH_LOOKUP bl ON b.BRANCH_ID = bl.BRANCH_ID  -- Joining with BRANCH_LOOKUP
JOIN 
    TRUSTBANKDATA.HARMONIZED.TRANSACTIONS t ON b.BRANCH_ID = t.LOCATIONID
JOIN 
    TRUSTBANKDATA.HARMONIZED.BRANCH_PERFORMANCE bp ON b.BRANCH_ID = bp.BRANCH_ID
GROUP BY 
    b.BRANCH_ID, bl.LOCATION;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_INVESTMENT_SUMMARY AS
SELECT 
    i.CUSTOMERID,
    i.INVESTMENT_TYPE,
    COUNT(i.INVESTMENTID) AS NumberOfInvestments,
    SUM(i.INVESTMENT_AMOUNT_SGD) AS TotalInvestedAmount,
    AVG(i.ACTUAL_ROI_) AS AverageROI,
    MAX(i.RISK_LEVEL) AS HighestRiskLevel
FROM 
    TRUSTBANKDATA.HARMONIZED.INVESTMENTS i
GROUP BY 
    i.CUSTOMERID, i.INVESTMENT_TYPE;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_LOAN_ANALYSIS AS
SELECT 
    l.CARDHOLDERID,
    l.LOAN_ID,
    l.LOAN_AMOUNT,
    l.INTEREST_RATE_,
    l.LOAN_TERM_MONTHS,
    l.LOAN_REPAYMENT_STATUS,
    l.LOAN_REPAID,
    l.LOAN_BALANCE,
    d.MARITAL_STATUS,
    d.EDUCATION_LEVEL,
    d.AGE_GROUP,
    d.INCOME_FREQUENCY
FROM 
    TRUSTBANKDATA.HARMONIZED.LOAN l
JOIN 
    TRUSTBANKDATA.HARMONIZED.CUSTOMER_DEMO d ON l.CARDHOLDERID = d.CARDHOLDERID;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_TABLE_ACCESS_STATS AS
SELECT 
    TABLE_NAME,
    TABLE_SCHEMA,
    QUERY_HISTORY.QUERY_TEXT,
    QUERY_HISTORY.EXECUTION_STATUS,
    COUNT(*) AS QUERY_COUNT,
    SUM(QUERY_HISTORY.TOTAL_ELAPSED_TIME) AS TOTAL_TIME_SPENT
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
JOIN 
    INFORMATION_SCHEMA.TABLES ON QUERY_HISTORY.QUERY_TEXT LIKE '%' || TABLES.TABLE_NAME || '%'
WHERE 
    TABLES.TABLE_SCHEMA = 'HARMONIZED'
GROUP BY 
    TABLE_NAME, TABLE_SCHEMA, QUERY_HISTORY.QUERY_TEXT, QUERY_HISTORY.EXECUTION_STATUS;

CREATE OR REPLACE VIEW TRUSTBANKDATA.HARMONIZED.VW_SCHEMA_CHANGE_LOG AS
SELECT 
    QUERY_TEXT,
    QUERY_TYPE,
    EXECUTION_STATUS,
    ERROR_CODE,
    ERROR_MESSAGE,
    START_TIME,
    END_TIME,
    USER_NAME
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE 
    QUERY_TEXT LIKE '%ALTER%' AND QUERY_TEXT LIKE '%HARMONIZED%'
ORDER BY 
    START_TIME DESC;
